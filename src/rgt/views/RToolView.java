package rgt.views;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.FileDialog;
import java.awt.Font;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.SwingUtilities;
import javax.swing.text.BadLocationException;
import javax.swing.text.DefaultHighlighter;
import javax.swing.text.Highlighter;
import javax.swing.text.Highlighter.HighlightPainter;

import rgt.application.ApplicationManager;
import rgt.constants.RGTConstants;
import rgt.controllers.EditController;
import rgt.controllers.GenerateController;
import rgt.controllers.IdentifyController;
import rgt.data.ActionData;
import rgt.data.BusinessProcessData;
import rgt.data.StepData;
import rgt.views.dialog.AddDialog;
import rgt.views.dialog.DeleteDialog;
import rgt.views.dialog.UpdateDialog;

public class RToolView extends JFrame implements ActionListener{
	
	private static final long serialVersionUID = 1L;
	public RToolView() {
        initComponents();
        
        jTextArea1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseReleased(MouseEvent e) {
                if (jTextArea1.getSelectedText() != null) {
                    String s = jTextArea1.getSelectedText();
                    System.out.println(s);
                    Highlighter highlighter = jTextArea1.getHighlighter();
                    HighlightPainter painter = new DefaultHighlighter.DefaultHighlightPainter(Color.yellow);
                    //open the pop up
                    JPanel panel = new JPanel();
                    String[] options = {"verb", "noun"}; 
                    String result;
                    result = (String) JOptionPane.showInputDialog(panel,"Please make a selection:", "Grammer", JOptionPane.QUESTION_MESSAGE, null,options ,options[0]);
                    System.out.println(result);
             
                    if (result.equals("verb")) {
                       verbFlag = true;
                       verb = s;
                    } else if (result.equals("noun")) {
                        System.out.println(verbFlag);
                       nounFlag = true;  
                       noun = s;
                    }
                    System.out.println(verb + noun);
                    if(verbFlag == true && nounFlag == true){
                        verbFlag = false;
                        nounFlag = false;
                    }
                    System.out.println();

                    try {
                        highlighter.addHighlight(jTextArea1.getSelectionStart(), jTextArea1.getSelectionEnd(), painter);
                    } catch (BadLocationException ex) {
                        Logger.getLogger(rgt.views.RToolView.class.getName()).log(Level.SEVERE, null, ex);
                    }

                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new JPanel();
        jScrollPane1 = new JScrollPane();
        jTextArea1 = new JTextArea();
        jLabel1 = new JLabel();
        jPanel2 = new JPanel();
        jScrollPane2 = new JScrollPane();
        jTextArea2 = new JTextArea();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenu6 = new javax.swing.JMenu();
        jMenu7 = new javax.swing.JMenu();
        jMenu8 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle(RGTConstants.TITLE);

        jPanel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
		f = new Font("Calibri",Font.PLAIN,15);
		jTextArea1.setFont(f);
		jTextArea1.setLineWrap(true);
		jTextArea1.setWrapStyleWord(true);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("Input :");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 419, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
		jTextArea2.setFont(f);
		jTextArea2.setLineWrap(true);
		jTextArea2.setWrapStyleWord(true);
        jScrollPane2.setViewportView(jTextArea2);

        jButton1.setText("Generate");
        jButton1.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				SwingUtilities.invokeLater(new Runnable(){

					@Override
					public void run() {
						EditView editFrame = new EditView();
						editFrame.setTitle(RGTConstants.EDIT_FRAME_TITLE);
						editFrame.setSize(RGTConstants.EDIT_FRAME_WIDTH, RGTConstants.EDIT_FRAME_HEIGHT);
						editFrame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
						editFrame.setResizable(false);
						editFrame.setVisible(true);
						
						GenerateController ctrl = new GenerateController();
						ctrl.generateRequirementsTestData();
					}
					
				});
			}
		});

        jLabel2.setText("Output Pane :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(338, 338, 338)
                .addComponent(jButton1)
                .addContainerGap(352, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(24, 24, 24))
        );

        jMenu1.setText("File");

        jMenuItem1.setText("New");

        jMenu1.add(jMenuItem1);

        jMenuItem2.setText("Open");
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("Exit");
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        
        JMenuItem addMenuItem = new JMenuItem("Add");
        jMenu2.add(addMenuItem);
        
        addMenuItem.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				AddDialog addDialog = new AddDialog(RToolView.this);
				addDialog.setTitle(RGTConstants.ADD_DIALOG_BOX_TITLE);
				addDialog.setSize(RGTConstants.DIALOG_WIDTH, RGTConstants.DIALOG_HEIGHT);
				addDialog.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
				Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
				addDialog.setLocation(dimension.width/2-addDialog.getSize().width/2, dimension.height/2-addDialog.getSize().height/2);
				addDialog.setVisible(true);
			}
		});
        
        deleteMenuItem = new JMenuItem("Delete");
        jMenu2.add(deleteMenuItem);
        
        deleteMenuItem.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				DeleteDialog deleteDialog = new DeleteDialog(RToolView.this);
				deleteDialog.setTitle(RGTConstants.DELETE_DIALOG_BOX_TITLE);
				deleteDialog.setSize(RGTConstants.DIALOG_WIDTH, RGTConstants.DIALOG_HEIGHT);
				deleteDialog.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
				Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
				deleteDialog.setLocation(dimension.width/2-deleteDialog.getSize().width/2, dimension.height/2-deleteDialog.getSize().height/2);
				deleteDialog.setVisible(true);
				
			}
			
		});
        
        jMenuItem4.setText("Update");
        jMenu2.add(jMenuItem4);

        jMenuItem4.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				UpdateDialog updateDialog = new UpdateDialog(RToolView.this);
				updateDialog.setTitle(RGTConstants.UPDATE_DIALOG_BOX_TITLE);
				updateDialog.setSize(RGTConstants.DIALOG_WIDTH, RGTConstants.DIALOG_HEIGHT);
				updateDialog.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
				Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
				updateDialog.setLocation(dimension.width/2-updateDialog.getSize().width/2, dimension.height/2-updateDialog.getSize().height/2);
				updateDialog.setVisible(true);
			}
		});
        
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Format");

        jMenu6.setText("Font");
        jMenu3.add(jMenu6);

        jMenu7.setText("Font Size");
        jMenu3.add(jMenu7);

        jMenu8.setText("Font Style");
        jMenu3.add(jMenu8);
		
		jMenu6.add(fname1= new JMenuItem("Arial"));
		jMenu6.add(fname2= new JMenuItem("Comic Sans MS"));
		jMenu6.add(fname3= new JMenuItem("Times New Roman"));
		
		jMenu8.add(fstyle1= new JMenuItem("Regular"));
		jMenu8.add(fstyle2= new JMenuItem("Bold"));
		
		
		jMenu7.add(fsize1= new JMenuItem("12"));
		jMenu7.add(fsize2= new JMenuItem("14"));
		jMenu7.add(fsize3= new JMenuItem("18"));
		jMenu7.add(fsize4= new JMenuItem("20"));

        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
		
		jMenuItem2.addActionListener(this);
		jMenuItem3.addActionListener(this);
		fname1.addActionListener(this);
		fname2.addActionListener(this);
		fname3.addActionListener(this);
		fstyle1.addActionListener(this);
		fstyle2.addActionListener(this);
		fsize1.addActionListener(this);
		fsize2.addActionListener(this);
		fsize3.addActionListener(this);
		fsize4.addActionListener(this);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void actionPerformed(ActionEvent evt) {
		command = (String)evt.getActionCommand();
		
		if(command.equals("Open")){
			String str1, str2, str3, str4 = "";
			IdentifyController impobj = new IdentifyController();
                        FileDialog dialog = new FileDialog(this,"Open");
			dialog.setVisible(true);
                        str1= dialog.getDirectory();
			str2= dialog.getFile();
                        System.out.println(str2);
                        str3 = str1 + str2;
                        File f= new File(str3);
                        if(str2.contains(".txt")){
                            str4 = impobj.readtxtfile(f);
                        }
                        else if(str2.contains(".docx")){
                            str4 = impobj.readdocxfile(f);
                        }
                        else if(str2.contains(".doc")){
                            str4 = impobj.readdocfile(f);
                        }
                        jTextArea1.setText(str4);
			
		}
		if(command.equals("Exit")){
			System.exit(0);
		}
		
		if(command.equals("Arial")){
			int fontSize = f.getSize();
			int fontStyle = f.getStyle();
			f = new Font("Arial", fontStyle, fontSize);
			jTextArea1.setFont(f);
			jTextArea2.setFont(f);
		}
		
		if(command.equals("Comic Sans MS")){
			int fontSize = f.getSize();
			int fontStyle = f.getStyle();
			f = new Font("Comic Sans MS", fontStyle, fontSize);
			jTextArea1.setFont(f);
			jTextArea2.setFont(f);
		}
		if(command.equals("Times New Roman")){
			int fontSize = f.getSize();
			int fontStyle = f.getStyle();
			f = new Font("Times New Roman", fontStyle, fontSize);
			jTextArea1.setFont(f);
			jTextArea2.setFont(f);
		}
		if(command.equals("Regular")){
			String fontName = f.getName();
			int fontSize = f.getSize();
			f = new Font(fontName, Font.PLAIN, fontSize);
			jTextArea1.setFont(f);
			jTextArea2.setFont(f);
		}
		if(command.equals("Bold")){
			String fontName = f.getName();
			int fontSize = f.getSize();
			f = new Font(fontName, Font.BOLD, fontSize);
			jTextArea1.setFont(f);
			jTextArea2.setFont(f);
		}
		if(command.equals("12")){
			String fontName = f.getName();
			int fontStyle = f.getStyle();
			f = new Font(fontName, fontStyle, 12);
			jTextArea1.setFont(f);
			jTextArea2.setFont(f);
		}
		if(command.equals("14")){
			String fontName = f.getName();
			int fontStyle = f.getStyle();
			f = new Font(fontName, fontStyle, 14);
			jTextArea1.setFont(f);
			jTextArea2.setFont(f);
		}
		if(command.equals("18")){
			String fontName = f.getName();
			int fontStyle = f.getStyle();
			f = new Font(fontName, fontStyle, 18);
			jTextArea1.setFont(f);
			jTextArea2.setFont(f);
		}
		if(command.equals("20")){
			String fontName = f.getName();
			int fontStyle = f.getStyle();
			f = new Font(fontName, fontStyle, 20);
			jTextArea1.setFont(f);
			jTextArea2.setFont(f);
		}
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]){
		RToolView r = new RToolView();
		r.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		r.setSize(RGTConstants.EDIT_FRAME_WIDTH, RGTConstants.EDIT_FRAME_HEIGHT);
		r.setTitle(RGTConstants.TITLE);
		Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();
		r.setLocation(dimension.width/2-r.getSize().width/2, dimension.height/2-r.getSize().height/2);
		r.setVisible(true);
		
		/** Test Methods Start  **/
		GenerateController ctrl=new GenerateController();
		ctrl.generateRequirementsTestData();
		
		testAddFeature();
		testUpdateFeature();
		testDeleteFeature();

		System.out.println(getOutputContent());
		
		/*SwingUtilities.invokeLater(new Runnable(){

			@Override
			public void run() {
				EditView editFrame = new EditView();
				editFrame.setTitle(RGTConstants.EDIT_FRAME_TITLE);
				editFrame.setSize(RGTConstants.EDIT_FRAME_WIDTH, RGTConstants.EDIT_FRAME_HEIGHT);
				editFrame.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
				editFrame.setResizable(false);
				editFrame.setVisible(true);
				
				GenerateController ctrl = new GenerateController();
				ctrl.generateRequirementsTestData();
			}
			
		});*/
		
		/** Test Methods End **/
	}

    private static void testDeleteFeature() {
		EditController editCtrlDelete = new EditController();
		
		//editCtrlDelete.deleteBusinessProcess(2);
		//editCtrlDelete.deleteStep(5);
		//editCtrlDelete.deleteAction(4);
	}
    
	private static void testUpdateFeature() {
		EditController editCtrlUpdate = new EditController();
		
		BusinessProcessData businessProcess = new BusinessProcessData();
		businessProcess.setBusinessProcessId("2");
		businessProcess.setVerbNounPhrase("withdraw money money money money money!!");
		businessProcess.setPriority(2);
		
		editCtrlUpdate.updateBusinessProcess(businessProcess);
		
		StepData step = new StepData();
		step.setStepId("5");
		step.setVerbNounPhrase("new step!!");
		step.setBusinessProcessId("1");
		editCtrlUpdate.updateStep(step);
		
		ActionData action = new ActionData();
		action.setActionId("5");
		action.setVerbNounPhrase("new action!!");
		action.setStepId("5");
		editCtrlUpdate.updateAction(action);
	}

	private static void testAddFeature() {
		EditController editCtrl = new EditController();
		
		BusinessProcessData businessProcess = new BusinessProcessData();
		businessProcess.setBusinessProcessId("2");
		businessProcess.setVerbNounPhrase("withdraw money");
		businessProcess.setPriority(2);
		
		editCtrl.addBusinessProcess(businessProcess);
		
		StepData step = new StepData();
		step.setStepId("5");
		step.setVerbNounPhrase("new step");
		step.setBusinessProcessId("2");
		editCtrl.addStep(step);
		
		ActionData action = new ActionData();
		action.setActionId("5");
		action.setVerbNounPhrase("new action");
		action.setStepId("5");
		editCtrl.addAction(action);
	}

    // Riten test
    public static StringBuilder getOutputContent() {
		ApplicationManager manager = new ApplicationManager();
		
		List<BusinessProcessData> businessProcesses = manager.getAllBusinessProcesses();
		StringBuilder output = new StringBuilder();
		for(BusinessProcessData businessProcess: businessProcesses) {
			output.append(businessProcess.getVerbNounPhrase() + "\n");
			for(StepData step: manager.getAllSteps(businessProcess.getBusinessProcessId())) {
				output.append("    " + step.getVerbNounPhrase() + "\n");
				for(ActionData action: manager.getAllActions(step.getStepId())) {
					output.append("        " + action.getVerbNounPhrase() + "\n");
				}
			}
		}
		
		return output;
	}
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private boolean verbFlag = false;
    private String verb;
    private String noun;
    private boolean nounFlag = false;
    private JMenuItem fname1, fname2, fname3, fstyle1, fstyle2, fsize1, fsize2, fsize3, fsize4;
    private Font f;
    private String command;
    private JMenuItem deleteMenuItem;
    // End of variables declaration//GEN-END:variables
}
